# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

# 默认端口给个8090
server:
  port: 8090

---
springdoc:
  show-actuator: true
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui

knife4j:
  enable: true
  setting:
    language: zh_cn
---
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            'configprops',
            'env',
            'health',
            'info',
            'logfile',
            'loggers',
            'prometheus',
            'threaddump',
            'caches',
            'liquibase',
          ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true

spring:
  application:
    name: money-making-machine-plus
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
#    active: dev
    active: '@profiles.active@'
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      # hibernate统计信息, 关闭
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  liquibase:
    enabled: true

server:
  servlet:
    session:
      cookie:
        http-only: true
#  java.io.EOFException: null异常处理
  ssl:
    enabled: false

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# 工作流 Flowable 配置
flowable:
  # 1. false: 默认值，Flowable 启动时，对比数据库表中保存的版本，如果不匹配。将抛出异常
  # 2. true: 启动时会对数据库中所有表进行更新操作，如果表存在，不做处理，反之，自动创建表
  # 3. create_drop: 启动时自动创建表，关闭时自动删除表
  # 4. drop_create: 启动时，删除旧表，再创建新表
  database-schema-update: true # 设置为 false，可通过 https://github.com/flowable/flowable-sql 初始化
  db-history-used: true # flowable6 默认 true 生成信息表，无需手动设置
  check-process-definitions: false # 设置为 false，禁用 /resources/processes 自动部署 BPMN XML 流程
  history-level: full # full：保存历史数据的最高级别，可保存全部流程相关细节，包括流程流转各节点参数

# ===================================================================
# app specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

z:
  app:
    name: 'MoneyMakingMachine'
    version: '@app.version@'
    basePackage: 'com.z'
  api-docs:
    default-include-pattern: ${server.servlet.context-path:}/api/**
    management-include-pattern: ${server.servlet.context-path:}/management/**
    title: ${z.app.name} API
    description: ${z.app.name} API documentation
    version: '@app.version@'
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  swagger:
    title: 赚钱机器
    description: 提供管理后台、用户 App 的所有功能
    version: ${z.app.version}
    url: x
    email: zhaozhiweishanxi@gmail.com
    license: MIT
    license-url: https://gitee.com/zhijiantianya/ruoyi-vue-pro/blob/master/LICENSE
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:"
    auth-white-list:
      # 静态资源白名单
      - /static/**
      - /images/**
      - /css/**
      - /js/**
      - /layui/**
      - /bootstrap-5.0.2-dist/**
      - /font-awesome-4.7.0/**
      - /druid/**
      - /lay-config.js
      - /echarts/**
      # url 白名单
      - /login
      - /api/login
      - /api/mobile/login/**
      - /actuator/**
      # 验证码
      - /captcha/numCode
      - /api/captcha/numCode
      # 积木报表
      - /jmreport/**

  #  分模块配置
  module:
    system:
      test: true
    generator:
      # 数据库类型
      jdbcType: jpa
      # ui类型: vue+elementui
      uiType: vue
      module: system
      basePackage: com.z.module.${z.module.generator.module}
      author: zhaozhiwei
      email: zhaozhiweishanxi@gmail.com
      tablePrefix: t_
      #    数据库字段到java映射
      mapping:
        BINARY_DOUBLE: Double
        BINARY_FLOAT: Float
        BINARY_INTEGER: Integer
        BLOB: String
        CHAR: String
        CLOB: String
        DATE: Date
        DATETIME: Date
        DECIMAL: BigDecimal
        DOUBLE: Double
        FLOAT: Float
        INT: Integer
        INT16: Short
        INT32: Integer
        INT64: Long
        INTEGER: Integer
        LONG: String
        NUMBER: Integer
        NVARCHAR: String
        NVARCHAR2: String
        TIMESTAMP: Date
        TIMESTAMP(6): Date
        VARCHAR: String
        VARCHAR2: String
        bigint: Long
        bit: Boolean
        bool: Boolean
        char: String
        date: Date
        datetime: Date
        decimal: BigDecimal
        double: Double
        float: Float
        int: Integer
        int2: Integer
        int4: Integer
        int8: Long
        integer: Integer
        longtext: String
        mediumint: Integer
        mediumtext: String
        numeric: BigDecimal
        smallint: Integer
        text: String
        timestamp: Date
        tinyint: Integer
        tinytext: String
        varchar: String

#  集成测试参数配置
  itest:
    serverIpPort: http://127.0.0.1:8090
    serverUserName: 3400_001001A3
    serverPassword: 1
#   替换为实际使用的可用计划额度id
    planCtrlId: D8FB0545181AFD71C12B69E09346E5DE
  # 默认使用simpleCache
  cache: 'simple'

# 验证码
kaptcha:
  background:
    clear:
      from: 92,189,170
      to: 255,255,255
  border: 'no'
  height: 42
  textproducer:
    char:
#      验证码文本字符长度  默认为5
      length: 4
      space: 10
      string: 1234567890
    font:
#      验证码文本字体样式  默认为new Font("Arial", 1, fontSize), new Font("Courier", 1, fontSize)
      names: 仿宋,微软雅黑
      size: 40
  width: 150