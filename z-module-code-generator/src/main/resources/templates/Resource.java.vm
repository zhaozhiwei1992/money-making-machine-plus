package ${package}.web.rest;

import java.util.Arrays;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import ${package}.domain.${className};
import ${package}.repository.${className}Repository;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(tags = "${comments}API")
@RestController
@RequestMapping("/api")
@Slf4j
public class ${className}Resource {

    @Autowired
    private ${className}Repository ${classNameLowerFirstWord}Repository;

    @PostMapping("/${pathName}")
    public ResponseData<${className}> create${className}(@RequestBody ${className} example) {
        log.debug("REST request to save ${className} : {}", example);
        this.${classNameLowerFirstWord}Repository.save(example);

        final ResponseData<${className}> responseData = new ResponseData<>();
        responseData.setCode(String.valueOf(HttpStatus.OK.value()));
        responseData.setData(example);
        return responseData;
    }

    /**
     * @Description: 分页数据获取
     */
    @GetMapping("/${pathName}")
    public ResponseData<List<${className}>> getAll${className}s(Pageable pageable) {
        log.debug("REST request to get all ${className}");

        final List<${className}> all = ${classNameLowerFirstWord}Repository.findAll();

        final ResponseData<List<${className}>> responseData = new ResponseData<>();
        responseData.setData(all);
        responseData.setCode("0");
        responseData.setCount(all.size());
        return responseData;
    }

    @DeleteMapping("/${pathName}")
    public ResponseData<String> delete${className}(@RequestBody List<Long> idList) {
        log.debug("REST request to delete ${className}s, ids: {}", idList);
        this.${classNameLowerFirstWord}Repository.deleteAllByIdIn(idList);
        final ResponseData<String> responseData = new ResponseData<>();
        responseData.setCode(ResponseCodeEnum.SUCCESS.getCode());
        responseData.setMsg(ResponseCodeEnum.SUCCESS.getMsg());
        return responseData;
    }
}
